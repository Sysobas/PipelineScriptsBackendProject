kind: Namespace
apiVersion: v1
metadata:
 name: nodejs
spec:
 finalizers:
  - kubernetes
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: nodejs
  namespace: nodejs
spec:
  rules:
    - host: nodejs.gke.linux4sysadmin.com.br
      http:
        paths:
          - backend:
              serviceName: nodejs-service
              servicePort: 8080
            path: /
  tls:
    - hosts:
        - nodejs.gke.linux4sysadmin.com.br
---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: nodejs
data:
  .dockerconfigjson: eyJhdXRocyI6eyJjb250YWluZXIuZ2tlLmxpbnV4NHN5c2FkbWluLmNvbS5iciI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJsZW5vdm8wMSIsImF1dGgiOiJZV1J0YVc0NmJHVnViM1p2TURFPSJ9fX0=
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
 name: nodejs-service
 namespace: nodejs
 labels:
   app: nodejs
spec:
 #type: LoadBalancer
 #type: NodePort
 selector:
   app: nodejs
 ports:
  - port: 8080
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
 labels:
   app: nodejs
 name: nodejs
 namespace: nodejs
 annotations:  
   template.alpha.openshift.io/wait-for-ready: 'true'
spec:
 replicas: 1
 selector:
  matchLabels:
   app: nodejs
 template:
  metadata:
   labels:
    app: nodejs
  spec:
   imagePullSecrets:
    - name: regcred
   containers: 
    - name: nodejs
      image: container.gke.linux4sysadmin.com.br/node/k8s-nodejs
      resources:
        limits:
          cpu: '1'
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 50Mi
      ports:
       - containerPort: 3000
      livenessProbe:
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 10
        timeoutSeconds: 2
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 30
        timeoutSeconds: 2
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 3
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: nodejs
  namespace: nodejs
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nodejs
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      #targetAverageUtilization: 90
      target:    # For use with v2beta2 version
        type: Utilization
        averageUtilization: 50
#---
#apiVersion: autoscaling.k8s.io/v1
#kind: VerticalPodAutoscaler
#metadata:
#  name: nodejs-vpa
#spec:
#  targetRef:
#    apiVersion: "apps/v1"
#    kind:       Deployment
#    name:       nodejs
#  updatePolicy:
#    updateMode: "Auto"
